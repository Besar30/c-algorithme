#include<bits/stdc++.h>
#include<string>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
// find_by_order, order_of_key
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> oset;
typedef tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update> omset;
#define int  long long
#define endl '\n'
#define ll long long
#define all(x) x.begin(),x.end()
#define rall(x) x.rbegin(),x.rend()
#define pi pair<ll,ll>
#define f first
#define s second
#define INF 100000000000009
#define Beso ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(0)
int oo=1e9;
const double PI=3.14159265359;
const int N=2e5+3,SQ=448;

int n=0,q=0;
int arr[N],sum_of_blocks[N];
vector<vector<int>>blocks(SQ);
// create table (num in blocks)
void process(){
    for(int i=0;i<n;i++){
        blocks[i/SQ].push_back(arr[i]);
        sum_of_blocks[i/SQ]^=arr[i];
    }
}
int query(int l,int r){
    int ans=0;
    while(l<=r){
        if(l%SQ==0&&l+SQ<=r){
            ans^=sum_of_blocks[l/SQ];
            l+=SQ;
        }
        else{
            ans^=arr[l];
            l++;
        }
    }
    return ans;
}
void interstaller(){
    cin>>n>>q;
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    process();
    while(q--){
        int l=0,r=0;
        cin>>l>>r;
        cout<<query(--l,--r)<<endl;
    }
}
int32_t main(){
#ifndef ONLINE_JUDGE
    freopen("Input.txt","r",stdin);
    freopen("Output.txt","w",stdout);
#endif
//    freopen("inc.in", "r", stdin);
    Beso;
    int T=1;
//    cin>>T;
    while(T--)
    {
        interstaller();
    }
    // **********************************************************************************************
}
